1+1

1+2

3/2.4

3*9

a = 1

b = 2

a+b

a = "python"

print(a)

a

a = 3
if a > 1:
    print('a is greater than 1')
    

a = 1
if a > 1:
    print('a is greater than 1')

for a in [1,2,3]:
    print(a)

i = 0
while i < 3:
    i = i + 1
    print(i)


def add(a,b):   #함수 정의
    return a+b

add(3,4)

###########################################################################################
# 숫자형 ( 문단 무시가 될 수도 있으니, #을 길게 넣어서 창을 넣는다.)
###########################################################################################

# 나머지 연산자

7 % 3

3 % 7

12 % 2 #2로 나눈 나머지가 0 이면 항상 짝수

13 % 2 #2로 나눈 나머지가 1 이면 항상 홀수

 50 % 5 # 특정 수로 나눈 나머지가 0 이면 그 수의 배수이다.

20 % 5

20 % 2

7 / 4

7 // 4 # // 는 몫을 나누는 연산자.

###########################################################################################
# 문자형
###########################################################################################

"Hello World"

'Python is fun'

"""Life is too short"""

'''You need python'''

"Python's favorit food is perl"  # 큰 따옴표를 넣으면 글자로 취급한다 

Python's favorit food is perl

'Python's favorit food is perl'

'"Python is very easy." he says.'

'Python\'s favorits food is perl' # 백슬래쉬를 넣으면 무력화가 되어 정사울력된다.

"\"Python is very easy.\" he says."

multiline = "Life is too short\n You need python"

multiline

multiline = '''
Life is too short
You need python
'''

multiline

print(multiline)

head = 'Python'   #문자열 더하기
tail = 'is fun!'
head + tail

a = 'Python' #문자열 곱하기
a*2

print("="*50)
print("My program")
print("="*50)

a = 'Life is'
len(a)

a = 'Life is too short, You need Python'

a[3] # 파이썬은 0에서 시작한다. 그러므로 f가 아니라 e가 출력된다. 참고 : R프로그램에서는 1부터 시작을 한다. 자바도 0에서 시작)

a[-1] # 끝부터 센다.

a[-0] #-0은 0 이기 때문에 

a[0:4] #0부터 4 까지 출력. 0,1,2,3 (4 전까지 / 미만까지만)

a[0:3] #0부터 3 까지 출력. 0,1,2 (3 전까지 / 미만까지만)

"\Python is very easy.\" he says.



"\Python is very easy.\" he says.
